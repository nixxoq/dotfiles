#!/usr/bin/env bash
#  ████████╗███████╗██████╗ ███╗   ███╗██╗███╗   ██╗ █████╗ ██╗     
#  ╚══██╔══╝██╔════╝██╔══██╗████╗ ████║██║████╗  ██║██╔══██╗██║     
#     ██║   █████╗  ██████╔╝██╔████╔██║██║██╔██╗ ██║███████║██║     
#     ██║   ██╔══╝  ██╔══██╗██║╚██╔╝██║██║██║╚██╗██║██╔══██║██║     
#     ██║   ███████╗██║  ██║██║ ╚═╝ ██║██║██║ ╚████║██║  ██║███████╗
#     ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚══════╝
#   Script to open with selected terminal
#   Author: z0mbi3
#   url: https://github.com/gh0stzk/dotfiles

CFG_TERM="$HOME/.config/bspwm/src/.term"
DEFAULT_TERM="alacritty"
ROFI_THEME="$HOME/.config/bspwm/src/rofi-themes/TermSelector.rasi"

# Creating config file if not exists.
[ ! -f "$CFG_TERM" ] && echo "$DEFAULT_TERM" > "$CFG_TERM"

# Main var
MY_TERM=$(< "$CFG_TERM")

# Function to choose the terminal using rofi
choose_terminal() {
    local options=("Alacritty" "Kitty")
    local current_term=$(tr '[:upper:]' '[:lower:]' < "$CFG_TERM")

    local selected_index=$(printf '%s\n' "${options[@],,}" | awk -v cur="$current_term" '$0==cur {print NR-1; exit}')

    local chosen
    chosen=$(printf '%s\n' "${options[@]}" | rofi -theme "$ROFI_THEME" -mesg "[ Your current terminal is $MY_TERM ]" -dmenu -selected-row "$selected_index")
    
    [[ -n "$chosen" ]] && echo "${chosen,,}" > "$CFG_TERM"
}

# Terminal selector
[ "$1" = "--selecterm" ] && choose_terminal

# Launch the terminal with appropriate options
case $MY_TERM in
    "alacritty")
        case $1 in
            "--terminal")
                alacritty
                ;;
            "--floating")
                alacritty --class FloaTerm,FloaTerm -o window.dimensions.lines=22 window.dimensions.columns=90
                ;;
            "--update")
                alacritty --hold --class FloaTerm,FloaTerm -o window.dimensions.lines=22 window.dimensions.columns=90 -e Updates --update-system
                ;;
            "--checkupdates")
                alacritty --hold --class Updating,Updating -o window.dimensions.lines=22 window.dimensions.columns=47 -e Updates --print-updates
                ;;
            "--ranger")
                alacritty --class FloaTerm,FloaTerm -o window.dimensions.lines=14 window.dimensions.columns=90 -e ranger
                ;;
            "--nvim")
                alacritty -e nvim
                ;;
            "--music")
                alacritty --class FloaTerm,FloaTerm -o window.dimensions.lines=18 window.dimensions.columns=67 -e ncmpcpp
                ;;
            "--fetch")
                alacritty --class FloaTerm,FloaTerm -o window.dimensions.lines=26 window.dimensions.columns=40 -e ~/.local/bin/sysfetch
                ;;
        esac
        ;;
    "kitty")
        case $1 in
            "--terminal")
                kitty
                ;;
            "--floating")
                kitty --class=FloaTerm -o initial_window_width=842 -o initial_window_height=495
                ;;
            "--update")
                kitty --hold --class=FloaTerm -o initial_window_width=842 -o initial_window_height=495 -e Updates --update-system
                ;;
            "--checkupdates")
                kitty --hold --class=Updating -o initial_window_width=457 -o initial_window_height=496 -e Updates --print-updates
                ;;
            "--ranger")
                kitty --hold --class=FloaTerm -o initial_window_width=844 -o initial_window_height=328 -e ranger
                ;;
            "--nvim")
                kitty -e nvim
                ;;
            "--music")
                kitty --class=FloaTerm -o initial_window_width=637 -o initial_window_height=412 -e ncmpcpp
                ;;
            "--fetch")
                kitty --class=FloaTerm -o initial_window_width=394 -o initial_window_height=580 -e ~/.local/bin/sysfetch
                ;;
        esac
        ;;
esac
